<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace等于mapper接口类的全限定名,这样实现对应。 一个mapper标签对应着一个mapper接口 -->
<mapper namespace="cn.wangye.mapper.OrderMapper">
    <!--    创建resultMap实现“对一”关联关系映射-->
    <!--    id属性: 通常设置为这个resultMap所五福的那条SQL语句的id加上ResultMap-->
    <!--    type属性: 要设置为这个resultMap所服务的那条SQL语句要返回的类型 全限定名|别名-->
    <resultMap id="selectOrderWithCustomerResultMap" type="order">
        <!--        先设置Order自身属性和字段的对应关系 id标签对应主键，result对应普通属性-->
        <id column="order_id" property="orderId"/>
        <result column="order_name" property="orderName"/>

        <!-- 使用association标签配置“对一”的关联关系-->
        <!-- property属性：在Order类中对一的一端进行引用时使用的属性名 -->
        <!-- javaType 一的一端 类的全类名 -->
        <association property="customer" javaType="customer">
            <!-- 配置Customer类的属性和字段名之间的对应关系-->
            <id column="customer_id" property="customerId"/>
            <result column="customer_name" property="customerName"/>
        </association>
    </resultMap>

    <resultMap id="selectCustomerWithOrderResultMap" type="customer">
        <id column="customer_id" property="customerId"/>
<!--        <result column="customer_name" property="customerName"/>-->
        <!-- collection标签：映射“对多”的关联关系 -->
        <!-- property属性：在Customer类中，关联“多”的一端的属性名 -->
        <!-- ofType属性：集合属性中元素的类型 -->
        <collection property="orderList" ofType="order">
            <id column="order_id" property="orderId"/>
<!--            <result column="order_name" property="orderName"/>-->
        </collection>

    </resultMap>



    <!-- Order selectOrderWithCustomer(Integer orderId);  -->
    <select id="selectOrderWithCustomer" resultMap="selectOrderWithCustomerResultMap">
        select order_id, order_name, `order`.customer_id,customer_name
        from t_order `order` left join t_customer customer
        on `order`.customer_id = customer.customer_id where order_id = #{orderId};
    </select>

    <!-- Customer selectCustomerWithOrder(Integer customerId);   -->
    <select id="selectCustomerWithOrder" resultMap="selectCustomerWithOrderResultMap">
        select c.customer_id, c.customer_name,o.order_id,o.order_name
        from t_customer c left join t_order o
        on c.customer_id = o.customer_id=#{cuksdjfjksj1};
    </select>
</mapper>